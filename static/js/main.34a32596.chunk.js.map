{"version":3,"sources":["components/Form/Form.jsx","components/Contacts/Contacts.jsx","components/Filter/Filter.jsx","App.jsx","index.js"],"names":["Form","state","name","number","nameInputId","uuidv4","numberInputID","handleInputChnage","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","id","reset","this","type","htmlFor","pattern","title","required","onChange","Component","Contacts","contacts","handleClick","onClick","data","map","contact","defaultProps","Filter","handler","App","filter","formSubmitHandler","dataLowerCase","toLowerCase","itemToFind","find","alert","prevState","handleFilter","handleClickDelete","localStorage","getItem","paresedContacts","JSON","parse","prevProps","setItem","stringify","filterValueNorm","filteredContactList","includes","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.34a32596.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  nameInputId = uuidv4();\r\n  numberInputID = uuidv4();\r\n\r\n  handleInputChnage = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onSubmit({ id: uuidv4(), ...this.state });\r\n    this.reset();\r\n  };\r\n\r\n  reset() {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form type=\"submit\" onSubmit={this.handleSubmit}>\r\n        <label htmlFor={this.nameInputId}>\r\n          Name\r\n          <input\r\n            value={this.state.name}\r\n            id={this.nameInputId}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={this.handleInputChnage}\r\n          />\r\n        </label>\r\n        <label htmlFor={this.numberInputID}>\r\n          Number\r\n          <input\r\n            value={this.state.number}\r\n            id={this.numberInputID}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            onChange={this.handleInputChnage}\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport class Contacts extends Component {\r\n  static defaultProps = {\r\n    contacts: [],\r\n  };\r\n\r\n  static propTypes = {\r\n    contacts: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.number,\r\n      PropTypes.array,\r\n    ]),\r\n    onClick: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = { contacts: this.props.contacts };\r\n\r\n  handleClick = (id) => {\r\n    this.props.onClick(id);\r\n  };\r\n\r\n  render() {\r\n    const data = this.props.contacts;\r\n    return (\r\n      <ul>\r\n        {data.map((contact) => (\r\n          <li key={contact.id}>\r\n            {contact.name} {contact.number}\r\n            <button onClick={() => this.handleClick(contact.id)} type=\"button\">\r\n              delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Filter = ({ value, handler }) => {\r\n  const id = uuidv4();\r\n  return (\r\n    <>\r\n      <label htmlFor={id}></label>\r\n      <input id={id} type=\"text\" value={value} onChange={handler} />\r\n    </>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  handler: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import \"./App.css\";\r\nimport React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Form from \"./components/Form/Form\";\r\nimport Contacts from \"./components/Contacts/Contacts\";\r\nimport Filter from \"./components/Filter/Filter\";\r\n// import { v4 as uuidv4 } from \"uuid\";\r\n\r\nclass App extends Component {\r\n  static defaultProps = {\r\n    contacts: [],\r\n  };\r\n  static propTypes = {\r\n    contacts: PropTypes.array.isRequired,\r\n  };\r\n\r\n  state = {\r\n    contacts: [\r\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n    ],\r\n    filter: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    const contacts = localStorage.getItem(\"contacts\");\r\n    if (contacts) {\r\n      const paresedContacts = JSON.parse(contacts);\r\n      this.setState({ contacts: paresedContacts });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.contacts !== prevState.contacts) {\r\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  formSubmitHandler = (data) => {\r\n    const dataLowerCase = data.name.toLowerCase();\r\n    const itemToFind = this.state.contacts.find(\r\n      (contact) => contact.name.toLowerCase() === dataLowerCase\r\n    );\r\n    if (itemToFind) {\r\n      alert(`${itemToFind.name} is already in contacts`);\r\n    } else {\r\n      this.setState((prevState) => ({\r\n        contacts: [...prevState.contacts, data],\r\n      }));\r\n    }\r\n  };\r\n\r\n  handleFilter = (e) => {\r\n    this.setState({\r\n      filter: e.currentTarget.value,\r\n    });\r\n  };\r\n\r\n  handleClickDelete = (id) => {\r\n    this.setState({\r\n      contacts: this.state.contacts.filter((contact) => contact.id !== id),\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { contacts, value } = this.state;\r\n    const filterValueNorm = this.state.filter.toLowerCase();\r\n    const filteredContactList = contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(filterValueNorm)\r\n    );\r\n    return (\r\n      <div className=\"App\">\r\n        <h3>Phonebook</h3>\r\n        <Form onSubmit={this.formSubmitHandler} />\r\n        <h3>Contacts</h3>\r\n        <p>filter via name</p>\r\n        <Filter value={value} handler={this.handleFilter} />\r\n        <Contacts\r\n          contacts={filteredContactList}\r\n          onClick={this.handleClickDelete}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App.jsx\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}